services:
  # Api Service
  api:
    build:
      context: .
      dockerfile: ./src/deployment/Dockerfile
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=development
      - PORT=9000
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/library_management
    depends_on:
      - postgres
    command: sh -c "npm install && npm run watch"
    networks:
      - api-network

  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: api_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: library_management
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - api-network

  # pgAdmin Service
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DISABLE_CSRF: "True"
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - api-network

volumes:
  postgres_db:

networks:
  api-network:
    driver: bridge
